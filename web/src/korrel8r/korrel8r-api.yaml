openapi: 3.0.1
info:
  title: REST API
  description: REST API for the Korrel8r correlation engine.
  contact:
    name: Project Korrel8r
    url: https://github.com/korrel8r/korrel8r
  license:
    name: Apache 2.0
    url: https://github.com/korrel8r/korrel8r/blob/main/LICENSE
  version: v1alpha1
servers:
- url: https://localhost:8080/api/v1alpha1
- url: http://localhost:8080/api/v1alpha1
paths:
  /config:
    put:
      summary: Change key configuration settings at runtime.
      parameters:
      - name: verbose
        in: query
        description: verbose setting for logging
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content: {}
        default:
          description: ""
          content:
            application/json:
              schema:
                type: object
  /domains:
    get:
      summary: "Get name, configuration and status for each domain."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain'
        default:
          description: ""
          content:
            application/json:
              schema:
                type: object
  /graphs/goals:
    post:
      summary: Create a correlation graph from start objects to goal queries.
      parameters:
      - name: rules
        in: query
        description: include rules in graph edges
        schema:
          type: boolean
      requestBody:
        description: search from start to goal classes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goals'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Graph'
        "206":
          description: "interrupted, partial result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Graph'
        default:
          description: ""
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: request
  /graphs/neighbours:
    post:
      summary: Create a neighbourhood graph around a start object to a given depth.
      parameters:
      - name: rules
        in: query
        description: include rules in graph edges
        schema:
          type: boolean
      requestBody:
        description: search from neighbours
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Neighbours'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Graph'
        "206":
          description: "interrupted, partial result"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Graph'
        default:
          description: ""
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: request
  /lists/goals:
    post:
      summary: Create a list of goal nodes related to a starting point.
      requestBody:
        description: search from start to goal classes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goals'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Node'
        default:
          description: ""
          content:
            application/json:
              schema:
                type: object
      x-codegen-request-body-name: request
  /objects:
    get:
      summary: "Execute a query, returns a list of JSON objects."
      parameters:
      - name: query
        in: query
        description: query string
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        default:
          description: ""
          content:
            application/json:
              schema:
                type: object
components:
  schemas:
    Constraint:
      type: object
      properties:
        end:
          type: string
          description: "End of time interval, quoted RFC 3339 format."
          format: date-time
          nullable: true
        limit:
          type: integer
          description: "Limit number of objects returned per query, <=0 means no limit."
        start:
          type: string
          description: "Start of time interval, quoted RFC 3339 format."
          format: date-time
          nullable: true
        timeout:
          type: string
          description: "Timeout per request, h/m/s/ms/ns format"
      description: Constraint constrains the objects that will be included in search
        results.
    Domain:
      type: object
      properties:
        name:
          type: string
          description: Name of the domain.
        stores:
          type: array
          description: Stores configured for the domain.
          items:
            $ref: '#/components/schemas/Store'
      description: Domain configuration information.
    Edge:
      type: object
      properties:
        goal:
          type: string
          description: Goal is the class name of the goal node.
          example: domain:class
        rules:
          type: array
          description: Rules is the set of rules followed along this edge.
          items:
            $ref: '#/components/schemas/Rule'
          x-omitempty: true
        start:
          type: string
          description: Start is the class name of the start node.
      description: "Directed edge in the result graph, from Start to Goal classes."
    Goals:
      type: object
      properties:
        goals:
          type: array
          description: Goal classes for correlation.
          example:
          - domain:class
          items:
            type: string
        start:
          $ref: '#/components/schemas/Start'
      description: Starting point for a goals search.
    Graph:
      type: object
      properties:
        edges:
          type: array
          items:
            $ref: '#/components/schemas/Edge'
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/Node'
      description: Graph resulting from a correlation search.
    Neighbours:
      type: object
      properties:
        depth:
          type: integer
          description: Max depth of neighbours graph.
        start:
          $ref: '#/components/schemas/Start'
      description: Starting point for a neighbours search.
    Node:
      type: object
      properties:
        class:
          type: string
          description: Class is the full class name in "DOMAIN:CLASS" form.
          example: domain:class
        count:
          type: integer
          description: "Count of results found for this class, after de-duplication."
        queries:
          type: array
          description: Queries yielding results for this class.
          items:
            $ref: '#/components/schemas/QueryCount'
      description: "Node in the result graph, contains results for a single class."
    QueryCount:
      type: object
      properties:
        count:
          type: integer
          description: Count of results or -1 if the query was not executed.
        query:
          type: string
          description: Query for correlation data.
      description: Query run during a correlation with a count of results found.
    Rule:
      type: object
      properties:
        name:
          type: string
          description: Name is an optional descriptive name.
        queries:
          type: array
          description: Queries generated while following this rule.
          items:
            $ref: '#/components/schemas/QueryCount'
      description: Rule is a correlation rule with a list of queries and results counts
        found during navigation.
    Start:
      type: object
      properties:
        class:
          type: string
          description: Class for `objects`
        constraint:
          $ref: '#/components/schemas/Constraint'
        objects:
          type: object
          properties: {}
          description: Objects of `class` serialized as JSON
        queries:
          type: array
          description: Queries for starting objects
          items:
            type: string
      description: Start identifies a set of starting objects for correlation.
    Store:
      type: object
      additionalProperties:
        type: string
      description: Store is a map of name:value attributes used to connect to a store.
x-original-swagger-version: "2.0"
